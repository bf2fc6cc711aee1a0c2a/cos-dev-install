apiVersion: v1
data:
  mariadb_sink_0.1.json: |-
    {
      "connector_type" : {
        "json_schema" : {
          "type" : "object",
          "properties" : {
            "connector" : {
              "type" : "object",
              "title" : "MariaDB Sink",
              "required" : [ "serverName", "username", "password", "query", "databaseName" ],
              "properties" : {
                "serverName" : {
                  "title" : "Server Name",
                  "description" : "Server Name for the data source",
                  "type" : "string",
                  "example" : "localhost"
                },
                "port" : {
                  "title" : "Port",
                  "description" : "Server Port for the data source",
                  "type" : "string",
                  "default" : 3306
                },
                "username" : {
                  "title" : "Username",
                  "description" : "The username to use for accessing a secured MariaDB Database",
                  "type" : "string"
                },
                "password" : {
                  "title" : "Password",
                  "oneOf" : [ {
                    "title" : "Password",
                    "description" : "The password to use for accessing a secured MariaDB Database",
                    "type" : "string",
                    "format" : "password"
                  }, {
                    "description" : "An opaque reference to the password",
                    "type" : "object",
                    "properties" : { }
                  } ]
                },
                "query" : {
                  "title" : "Query",
                  "description" : "The Query to execute against the MariaDB Database",
                  "type" : "string",
                  "example" : "INSERT INTO accounts (username,city) VALUES (:#username,:#city)"
                },
                "databaseName" : {
                  "title" : "Database Name",
                  "description" : "The Database Name we are pointing",
                  "type" : "string"
                }
              }
            },
            "kafka" : {
              "type" : "object",
              "title" : "Managed Kafka Source",
              "required" : [ "topic" ],
              "properties" : {
                "topic" : {
                  "title" : "Topic names",
                  "description" : "Comma separated list of Kafka topic names",
                  "type" : "string"
                }
              }
            },
            "steps" : {
              "type" : "array",
              "items" : {
                "oneOf" : [ {
                  "type" : "object",
                  "required" : [ "insert-field" ],
                  "properties" : {
                    "insert-field" : {
                      "title" : "Insert Field Action",
                      "description" : "Adds a custom field with a constant value to the message in transit",
                      "required" : [ "field", "value" ],
                      "properties" : {
                        "field" : {
                          "title" : "Field",
                          "description" : "The name of the field to be added",
                          "type" : "string"
                        },
                        "value" : {
                          "title" : "Value",
                          "description" : "The value of the field",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    }
                  }
                }, {
                  "type" : "object",
                  "required" : [ "extract-field" ],
                  "properties" : {
                    "extract-field" : {
                      "title" : "Extract Field Action",
                      "description" : "Extract a field from the body",
                      "required" : [ "field" ],
                      "properties" : {
                        "field" : {
                          "title" : "Field",
                          "description" : "The name of the field to be added",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    }
                  }
                } ]
              }
            }
          }
        },
        "id" : "mariadb_sink_0.1",
        "kind" : "ConnectorType",
        "icon_href" : "TODO",
        "name" : "MariaDB Sink",
        "description" : "MariaDB Sink",
        "version" : "0.1",
        "labels" : [ "sink" ],
        "channels" : [ "stable" ]
      },
      "channels" : {
        "stable" : {
          "shard_metadata" : {
            "connector_revision" : "1",
            "connector_type" : "sink",
            "connector_image" : "quay.io/lburgazzoli/mci:0.1.1-mariadb-sink-0.1",
            "operators" : [ {
              "type" : "camel-connector-operator",
              "version" : "[1.0.0,2.0.0)"
            } ],
            "kamelets" : {
              "connector" : "mariadb-sink",
              "kafka" : "managed-kafka-source",
              "insert-field" : "insert-field-action",
              "extract-field" : "extract-field-action"
            }
          }
        }
      }
    }
  mariadb_source_0.1.json: |-
    {
      "connector_type" : {
        "json_schema" : {
          "type" : "object",
          "properties" : {
            "connector" : {
              "type" : "object",
              "title" : "MariaDB Source",
              "required" : [ "serverName", "username", "password", "query", "databaseName" ],
              "properties" : {
                "serverName" : {
                  "title" : "Server Name",
                  "description" : "Server Name for the data source",
                  "type" : "string",
                  "example" : "localhost"
                },
                "port" : {
                  "title" : "Port",
                  "description" : "Server Port for the data source",
                  "type" : "string",
                  "default" : 3306
                },
                "username" : {
                  "title" : "Username",
                  "description" : "The username to use for accessing a secured MariaDB Database",
                  "type" : "string"
                },
                "password" : {
                  "title" : "Password",
                  "oneOf" : [ {
                    "title" : "Password",
                    "description" : "The password to use for accessing a secured MariaDB Database",
                    "type" : "string",
                    "format" : "password"
                  }, {
                    "description" : "An opaque reference to the password",
                    "type" : "object",
                    "properties" : { }
                  } ]
                },
                "query" : {
                  "title" : "Query",
                  "description" : "The Query to execute against the MariaDB Database",
                  "type" : "string",
                  "example" : "INSERT INTO accounts (username,city) VALUES (:#username,:#city)"
                },
                "databaseName" : {
                  "title" : "Database Name",
                  "description" : "The Database Name we are pointing",
                  "type" : "string"
                },
                "consumedQuery" : {
                  "title" : "Consumed Query",
                  "description" : "A query to run on a tuple consumed",
                  "type" : "string",
                  "example" : "DELETE FROM accounts where user_id = :#user_id"
                }
              }
            },
            "kafka" : {
              "type" : "object",
              "title" : "Managed Kafka Sink",
              "required" : [ "topic" ],
              "properties" : {
                "topic" : {
                  "title" : "Topic names",
                  "description" : "Comma separated list of Kafka topic names",
                  "type" : "string"
                }
              }
            },
            "steps" : {
              "type" : "array",
              "items" : {
                "oneOf" : [ {
                  "type" : "object",
                  "required" : [ "insert-field" ],
                  "properties" : {
                    "insert-field" : {
                      "title" : "Insert Field Action",
                      "description" : "Adds a custom field with a constant value to the message in transit",
                      "required" : [ "field", "value" ],
                      "properties" : {
                        "field" : {
                          "title" : "Field",
                          "description" : "The name of the field to be added",
                          "type" : "string"
                        },
                        "value" : {
                          "title" : "Value",
                          "description" : "The value of the field",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    }
                  }
                }, {
                  "type" : "object",
                  "required" : [ "extract-field" ],
                  "properties" : {
                    "extract-field" : {
                      "title" : "Extract Field Action",
                      "description" : "Extract a field from the body",
                      "required" : [ "field" ],
                      "properties" : {
                        "field" : {
                          "title" : "Field",
                          "description" : "The name of the field to be added",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    }
                  }
                } ]
              }
            }
          }
        },
        "id" : "mariadb_source_0.1",
        "kind" : "ConnectorType",
        "icon_href" : "TODO",
        "name" : "MariaDB Source",
        "description" : "MariaDB Source",
        "version" : "0.1",
        "labels" : [ "source" ],
        "channels" : [ "stable" ]
      },
      "channels" : {
        "stable" : {
          "shard_metadata" : {
            "connector_revision" : "1",
            "connector_type" : "source",
            "connector_image" : "quay.io/lburgazzoli/mci:0.1.1-mariadb-source-0.1",
            "operators" : [ {
              "type" : "camel-connector-operator",
              "version" : "[1.0.0,2.0.0)"
            } ],
            "kamelets" : {
              "connector" : "mariadb-source",
              "kafka" : "managed-kafka-sink",
              "insert-field" : "insert-field-action",
              "extract-field" : "extract-field-action"
            }
          }
        }
      }
    }
  mongodb_sink_0.1.json: |-
    {
      "connector_type" : {
        "json_schema" : {
          "type" : "object",
          "properties" : {
            "connector" : {
              "type" : "object",
              "title" : "MongoDB Sink",
              "required" : [ "hosts", "collection", "password", "username", "database" ],
              "properties" : {
                "hosts" : {
                  "title" : "MongoDB Hosts",
                  "description" : "Comma separated list of MongoDB Host Addresses in host:port format.",
                  "type" : "string"
                },
                "collection" : {
                  "title" : "MongoDB Collection",
                  "description" : "Sets the name of the MongoDB collection to bind to this endpoint.",
                  "type" : "string"
                },
                "password" : {
                  "title" : "MongoDB Password",
                  "oneOf" : [ {
                    "title" : "MongoDB Password",
                    "description" : "User password for accessing MongoDB.",
                    "type" : "string",
                    "format" : "password"
                  }, {
                    "description" : "An opaque reference to the password",
                    "type" : "object",
                    "properties" : { }
                  } ]
                },
                "username" : {
                  "title" : "MongoDB Username",
                  "description" : "Username for accessing MongoDB.",
                  "type" : "string"
                },
                "database" : {
                  "title" : "MongoDB Database",
                  "description" : "Sets the name of the MongoDB database to target.",
                  "type" : "string"
                }
              }
            },
            "kafka" : {
              "type" : "object",
              "title" : "Managed Kafka Source",
              "required" : [ "topic" ],
              "properties" : {
                "topic" : {
                  "title" : "Topic names",
                  "description" : "Comma separated list of Kafka topic names",
                  "type" : "string"
                }
              }
            },
            "steps" : {
              "type" : "array",
              "items" : {
                "oneOf" : [ {
                  "type" : "object",
                  "required" : [ "insert-field" ],
                  "properties" : {
                    "insert-field" : {
                      "title" : "Insert Field Action",
                      "description" : "Adds a custom field with a constant value to the message in transit",
                      "required" : [ "field", "value" ],
                      "properties" : {
                        "field" : {
                          "title" : "Field",
                          "description" : "The name of the field to be added",
                          "type" : "string"
                        },
                        "value" : {
                          "title" : "Value",
                          "description" : "The value of the field",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    }
                  }
                }, {
                  "type" : "object",
                  "required" : [ "extract-field" ],
                  "properties" : {
                    "extract-field" : {
                      "title" : "Extract Field Action",
                      "description" : "Extract a field from the body",
                      "required" : [ "field" ],
                      "properties" : {
                        "field" : {
                          "title" : "Field",
                          "description" : "The name of the field to be added",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    }
                  }
                } ]
              }
            }
          }
        },
        "id" : "mongodb_sink_0.1",
        "kind" : "ConnectorType",
        "icon_href" : "TODO",
        "name" : "MongoDB Sink",
        "description" : "MongoDB Sink",
        "version" : "0.1",
        "labels" : [ "sink" ],
        "channels" : [ "stable" ]
      },
      "channels" : {
        "stable" : {
          "shard_metadata" : {
            "connector_revision" : "1",
            "connector_type" : "sink",
            "connector_image" : "quay.io/lburgazzoli/mci:0.1.1-mongodb-sink-0.1",
            "operators" : [ {
              "type" : "camel-connector-operator",
              "version" : "[1.0.0,2.0.0)"
            } ],
            "kamelets" : {
              "connector" : "mongodb-sink",
              "kafka" : "managed-kafka-source",
              "insert-field" : "insert-field-action",
              "extract-field" : "extract-field-action"
            }
          }
        }
      }
    }
  mongodb_source_0.1.json: |-
    {
      "connector_type" : {
        "json_schema" : {
          "type" : "object",
          "properties" : {
            "connector" : {
              "type" : "object",
              "title" : "MongoDB Source",
              "required" : [ "hosts", "collection", "password", "username", "database" ],
              "properties" : {
                "hosts" : {
                  "title" : "MongoDB Hosts",
                  "description" : "Comma separated list of MongoDB Host Addresses in host:port format.",
                  "type" : "string"
                },
                "collection" : {
                  "title" : "MongoDB Collection",
                  "description" : "Sets the name of the MongoDB collection to bind to this endpoint.",
                  "type" : "string"
                },
                "password" : {
                  "title" : "MongoDB Password",
                  "oneOf" : [ {
                    "title" : "MongoDB Password",
                    "description" : "User password for accessing MongoDB.",
                    "type" : "string",
                    "format" : "password"
                  }, {
                    "description" : "An opaque reference to the password",
                    "type" : "object",
                    "properties" : { }
                  } ]
                },
                "username" : {
                  "title" : "MongoDB Username",
                  "description" : "Username for accessing MongoDB.",
                  "type" : "string"
                },
                "database" : {
                  "title" : "MongoDB Database",
                  "description" : "Sets the name of the MongoDB database to target.",
                  "type" : "string"
                },
                "persistentTailTracking" : {
                  "title" : "MongoDB Persistent Tail Tracking",
                  "description" : "Enable persistent tail tracking, which is a mechanism to keep track of the last consumed message across system restarts. The next time the system is up, the endpoint will recover the cursor from the point where it last stopped slurping records.",
                  "type" : "boolean",
                  "default" : false
                },
                "tailTrackIncreasingField" : {
                  "title" : "MongoDB Tail Track Increasing Field",
                  "description" : "Correlation field in the incoming record which is of increasing nature and will be used to position the tailing cursor every time it is generated.",
                  "type" : "string"
                }
              }
            },
            "kafka" : {
              "type" : "object",
              "title" : "Managed Kafka Sink",
              "required" : [ "topic" ],
              "properties" : {
                "topic" : {
                  "title" : "Topic names",
                  "description" : "Comma separated list of Kafka topic names",
                  "type" : "string"
                }
              }
            },
            "steps" : {
              "type" : "array",
              "items" : {
                "oneOf" : [ {
                  "type" : "object",
                  "required" : [ "insert-field" ],
                  "properties" : {
                    "insert-field" : {
                      "title" : "Insert Field Action",
                      "description" : "Adds a custom field with a constant value to the message in transit",
                      "required" : [ "field", "value" ],
                      "properties" : {
                        "field" : {
                          "title" : "Field",
                          "description" : "The name of the field to be added",
                          "type" : "string"
                        },
                        "value" : {
                          "title" : "Value",
                          "description" : "The value of the field",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    }
                  }
                }, {
                  "type" : "object",
                  "required" : [ "extract-field" ],
                  "properties" : {
                    "extract-field" : {
                      "title" : "Extract Field Action",
                      "description" : "Extract a field from the body",
                      "required" : [ "field" ],
                      "properties" : {
                        "field" : {
                          "title" : "Field",
                          "description" : "The name of the field to be added",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    }
                  }
                } ]
              }
            }
          }
        },
        "id" : "mongodb_source_0.1",
        "kind" : "ConnectorType",
        "icon_href" : "TODO",
        "name" : "MongoDB Source",
        "description" : "MongoDB Source",
        "version" : "0.1",
        "labels" : [ "source" ],
        "channels" : [ "stable" ]
      },
      "channels" : {
        "stable" : {
          "shard_metadata" : {
            "connector_revision" : "1",
            "connector_type" : "source",
            "connector_image" : "quay.io/lburgazzoli/mci:0.1.1-mongodb-source-0.1",
            "operators" : [ {
              "type" : "camel-connector-operator",
              "version" : "[1.0.0,2.0.0)"
            } ],
            "kamelets" : {
              "connector" : "mongodb-source",
              "kafka" : "managed-kafka-sink",
              "insert-field" : "insert-field-action",
              "extract-field" : "extract-field-action"
            }
          }
        }
      }
    }
  mysql_sink_0.1.json: |-
    {
      "connector_type" : {
        "json_schema" : {
          "type" : "object",
          "properties" : {
            "connector" : {
              "type" : "object",
              "title" : "MySQL Sink",
              "required" : [ "serverName", "username", "password", "query", "databaseName" ],
              "properties" : {
                "serverName" : {
                  "title" : "Server Name",
                  "description" : "Server Name for the data source",
                  "type" : "string",
                  "example" : "localhost"
                },
                "port" : {
                  "title" : "Port",
                  "description" : "Server Port for the data source",
                  "type" : "string",
                  "default" : 3306
                },
                "username" : {
                  "title" : "Username",
                  "description" : "The username to use for accessing a secured MySQL Database",
                  "type" : "string"
                },
                "password" : {
                  "title" : "Password",
                  "oneOf" : [ {
                    "title" : "Password",
                    "description" : "The password to use for accessing a secured MySQL Database",
                    "type" : "string",
                    "format" : "password"
                  }, {
                    "description" : "An opaque reference to the password",
                    "type" : "object",
                    "properties" : { }
                  } ]
                },
                "query" : {
                  "title" : "Query",
                  "description" : "The Query to execute against the MySQL Database",
                  "type" : "string",
                  "example" : "INSERT INTO accounts (username,city) VALUES (:#username,:#city)"
                },
                "databaseName" : {
                  "title" : "Database Name",
                  "description" : "The Database Name we are pointing",
                  "type" : "string"
                }
              }
            },
            "kafka" : {
              "type" : "object",
              "title" : "Managed Kafka Source",
              "required" : [ "topic" ],
              "properties" : {
                "topic" : {
                  "title" : "Topic names",
                  "description" : "Comma separated list of Kafka topic names",
                  "type" : "string"
                }
              }
            },
            "steps" : {
              "type" : "array",
              "items" : {
                "oneOf" : [ {
                  "type" : "object",
                  "required" : [ "insert-field" ],
                  "properties" : {
                    "insert-field" : {
                      "title" : "Insert Field Action",
                      "description" : "Adds a custom field with a constant value to the message in transit",
                      "required" : [ "field", "value" ],
                      "properties" : {
                        "field" : {
                          "title" : "Field",
                          "description" : "The name of the field to be added",
                          "type" : "string"
                        },
                        "value" : {
                          "title" : "Value",
                          "description" : "The value of the field",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    }
                  }
                }, {
                  "type" : "object",
                  "required" : [ "extract-field" ],
                  "properties" : {
                    "extract-field" : {
                      "title" : "Extract Field Action",
                      "description" : "Extract a field from the body",
                      "required" : [ "field" ],
                      "properties" : {
                        "field" : {
                          "title" : "Field",
                          "description" : "The name of the field to be added",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    }
                  }
                } ]
              }
            }
          }
        },
        "id" : "mysql_sink_0.1",
        "kind" : "ConnectorType",
        "icon_href" : "TODO",
        "name" : "MySQL Sink",
        "description" : "MySQL Sink",
        "version" : "0.1",
        "labels" : [ "sink" ],
        "channels" : [ "stable" ]
      },
      "channels" : {
        "stable" : {
          "shard_metadata" : {
            "connector_revision" : "1",
            "connector_type" : "sink",
            "connector_image" : "quay.io/lburgazzoli/mci:0.1.1-mysql-sink-0.1",
            "operators" : [ {
              "type" : "camel-connector-operator",
              "version" : "[1.0.0,2.0.0)"
            } ],
            "kamelets" : {
              "connector" : "mysql-sink",
              "kafka" : "managed-kafka-source",
              "insert-field" : "insert-field-action",
              "extract-field" : "extract-field-action"
            }
          }
        }
      }
    }
  mysql_source_0.1.json: |-
    {
      "connector_type" : {
        "json_schema" : {
          "type" : "object",
          "properties" : {
            "connector" : {
              "type" : "object",
              "title" : "MySQL Source",
              "required" : [ "serverName", "username", "password", "query", "databaseName" ],
              "properties" : {
                "serverName" : {
                  "title" : "Server Name",
                  "description" : "Server Name for the data source",
                  "type" : "string",
                  "example" : "localhost"
                },
                "port" : {
                  "title" : "Port",
                  "description" : "Server Port for the data source",
                  "type" : "string",
                  "default" : 3306
                },
                "username" : {
                  "title" : "Username",
                  "description" : "The username to use for accessing a secured MySQL Database",
                  "type" : "string"
                },
                "password" : {
                  "title" : "Password",
                  "oneOf" : [ {
                    "title" : "Password",
                    "description" : "The password to use for accessing a secured MySQL Database",
                    "type" : "string",
                    "format" : "password"
                  }, {
                    "description" : "An opaque reference to the password",
                    "type" : "object",
                    "properties" : { }
                  } ]
                },
                "query" : {
                  "title" : "Query",
                  "description" : "The Query to execute against the MySQL Database",
                  "type" : "string",
                  "example" : "INSERT INTO accounts (username,city) VALUES (:#username,:#city)"
                },
                "databaseName" : {
                  "title" : "Database Name",
                  "description" : "The Database Name we are pointing",
                  "type" : "string"
                },
                "consumedQuery" : {
                  "title" : "Consumed Query",
                  "description" : "A query to run on a tuple consumed",
                  "type" : "string",
                  "example" : "DELETE FROM accounts where user_id = :#user_id"
                }
              }
            },
            "kafka" : {
              "type" : "object",
              "title" : "Managed Kafka Sink",
              "required" : [ "topic" ],
              "properties" : {
                "topic" : {
                  "title" : "Topic names",
                  "description" : "Comma separated list of Kafka topic names",
                  "type" : "string"
                }
              }
            },
            "steps" : {
              "type" : "array",
              "items" : {
                "oneOf" : [ {
                  "type" : "object",
                  "required" : [ "insert-field" ],
                  "properties" : {
                    "insert-field" : {
                      "title" : "Insert Field Action",
                      "description" : "Adds a custom field with a constant value to the message in transit",
                      "required" : [ "field", "value" ],
                      "properties" : {
                        "field" : {
                          "title" : "Field",
                          "description" : "The name of the field to be added",
                          "type" : "string"
                        },
                        "value" : {
                          "title" : "Value",
                          "description" : "The value of the field",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    }
                  }
                }, {
                  "type" : "object",
                  "required" : [ "extract-field" ],
                  "properties" : {
                    "extract-field" : {
                      "title" : "Extract Field Action",
                      "description" : "Extract a field from the body",
                      "required" : [ "field" ],
                      "properties" : {
                        "field" : {
                          "title" : "Field",
                          "description" : "The name of the field to be added",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    }
                  }
                } ]
              }
            }
          }
        },
        "id" : "mysql_source_0.1",
        "kind" : "ConnectorType",
        "icon_href" : "TODO",
        "name" : "MySQL Source",
        "description" : "MySQL Source",
        "version" : "0.1",
        "labels" : [ "source" ],
        "channels" : [ "stable" ]
      },
      "channels" : {
        "stable" : {
          "shard_metadata" : {
            "connector_revision" : "1",
            "connector_type" : "source",
            "connector_image" : "quay.io/lburgazzoli/mci:0.1.1-mysql-source-0.1",
            "operators" : [ {
              "type" : "camel-connector-operator",
              "version" : "[1.0.0,2.0.0)"
            } ],
            "kamelets" : {
              "connector" : "mysql-source",
              "kafka" : "managed-kafka-sink",
              "insert-field" : "insert-field-action",
              "extract-field" : "extract-field-action"
            }
          }
        }
      }
    }
  postgresql_sink_0.1.json: |-
    {
      "connector_type" : {
        "json_schema" : {
          "type" : "object",
          "properties" : {
            "connector" : {
              "type" : "object",
              "title" : "PostgreSQL Sink",
              "required" : [ "serverName", "username", "password", "query", "databaseName" ],
              "properties" : {
                "serverName" : {
                  "title" : "Server Name",
                  "description" : "Server Name for the data source",
                  "type" : "string",
                  "example" : "localhost"
                },
                "port" : {
                  "title" : "Port",
                  "description" : "Server Port for the data source",
                  "type" : "string",
                  "default" : 5432
                },
                "username" : {
                  "title" : "Username",
                  "description" : "The username to use for accessing a secured PostgreSQL Database",
                  "type" : "string"
                },
                "password" : {
                  "title" : "Password",
                  "oneOf" : [ {
                    "title" : "Password",
                    "description" : "The password to use for accessing a secured PostgreSQL Database",
                    "type" : "string",
                    "format" : "password"
                  }, {
                    "description" : "An opaque reference to the password",
                    "type" : "object",
                    "properties" : { }
                  } ]
                },
                "query" : {
                  "title" : "Query",
                  "description" : "The Query to execute against the PostgreSQL Database",
                  "type" : "string",
                  "example" : "INSERT INTO accounts (username,city) VALUES (:#username,:#city)"
                },
                "databaseName" : {
                  "title" : "Database Name",
                  "description" : "The Database Name we are pointing",
                  "type" : "string"
                }
              }
            },
            "kafka" : {
              "type" : "object",
              "title" : "Managed Kafka Source",
              "required" : [ "topic" ],
              "properties" : {
                "topic" : {
                  "title" : "Topic names",
                  "description" : "Comma separated list of Kafka topic names",
                  "type" : "string"
                }
              }
            },
            "steps" : {
              "type" : "array",
              "items" : {
                "oneOf" : [ {
                  "type" : "object",
                  "required" : [ "insert-field" ],
                  "properties" : {
                    "insert-field" : {
                      "title" : "Insert Field Action",
                      "description" : "Adds a custom field with a constant value to the message in transit",
                      "required" : [ "field", "value" ],
                      "properties" : {
                        "field" : {
                          "title" : "Field",
                          "description" : "The name of the field to be added",
                          "type" : "string"
                        },
                        "value" : {
                          "title" : "Value",
                          "description" : "The value of the field",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    }
                  }
                }, {
                  "type" : "object",
                  "required" : [ "extract-field" ],
                  "properties" : {
                    "extract-field" : {
                      "title" : "Extract Field Action",
                      "description" : "Extract a field from the body",
                      "required" : [ "field" ],
                      "properties" : {
                        "field" : {
                          "title" : "Field",
                          "description" : "The name of the field to be added",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    }
                  }
                } ]
              }
            }
          }
        },
        "id" : "postgresql_sink_0.1",
        "kind" : "ConnectorType",
        "icon_href" : "TODO",
        "name" : "PostgreSQL Sink",
        "description" : "PostgreSQL Sink",
        "version" : "0.1",
        "labels" : [ "sink" ],
        "channels" : [ "stable" ]
      },
      "channels" : {
        "stable" : {
          "shard_metadata" : {
            "connector_revision" : "1",
            "connector_type" : "sink",
            "connector_image" : "quay.io/lburgazzoli/mci:0.1.1-postgresql-sink-0.1",
            "operators" : [ {
              "type" : "camel-connector-operator",
              "version" : "[1.0.0,2.0.0)"
            } ],
            "kamelets" : {
              "connector" : "postgresql-sink",
              "kafka" : "managed-kafka-source",
              "insert-field" : "insert-field-action",
              "extract-field" : "extract-field-action"
            }
          }
        }
      }
    }
  postgresql_source_0.1.json: |-
    {
      "connector_type" : {
        "json_schema" : {
          "type" : "object",
          "properties" : {
            "connector" : {
              "type" : "object",
              "title" : "PostgreSQL Source",
              "required" : [ "serverName", "username", "password", "query", "databaseName" ],
              "properties" : {
                "serverName" : {
                  "title" : "Server Name",
                  "description" : "Server Name for the data source",
                  "type" : "string",
                  "example" : "localhost"
                },
                "port" : {
                  "title" : "Port",
                  "description" : "Server Port for the data source",
                  "type" : "string",
                  "default" : 5432
                },
                "username" : {
                  "title" : "Username",
                  "description" : "The username to use for accessing a secured PostgreSQL Database",
                  "type" : "string"
                },
                "password" : {
                  "title" : "Password",
                  "oneOf" : [ {
                    "title" : "Password",
                    "description" : "The password to use for accessing a secured PostgreSQL Database",
                    "type" : "string",
                    "format" : "password"
                  }, {
                    "description" : "An opaque reference to the password",
                    "type" : "object",
                    "properties" : { }
                  } ]
                },
                "query" : {
                  "title" : "Query",
                  "description" : "The Query to execute against the PostgreSQL Database",
                  "type" : "string",
                  "example" : "INSERT INTO accounts (username,city) VALUES (:#username,:#city)"
                },
                "databaseName" : {
                  "title" : "Database Name",
                  "description" : "The Database Name we are pointing",
                  "type" : "string"
                },
                "consumedQuery" : {
                  "title" : "Consumed Query",
                  "description" : "A query to run on a tuple consumed",
                  "type" : "string",
                  "example" : "DELETE FROM accounts where user_id = :#user_id"
                }
              }
            },
            "kafka" : {
              "type" : "object",
              "title" : "Managed Kafka Sink",
              "required" : [ "topic" ],
              "properties" : {
                "topic" : {
                  "title" : "Topic names",
                  "description" : "Comma separated list of Kafka topic names",
                  "type" : "string"
                }
              }
            },
            "steps" : {
              "type" : "array",
              "items" : {
                "oneOf" : [ {
                  "type" : "object",
                  "required" : [ "insert-field" ],
                  "properties" : {
                    "insert-field" : {
                      "title" : "Insert Field Action",
                      "description" : "Adds a custom field with a constant value to the message in transit",
                      "required" : [ "field", "value" ],
                      "properties" : {
                        "field" : {
                          "title" : "Field",
                          "description" : "The name of the field to be added",
                          "type" : "string"
                        },
                        "value" : {
                          "title" : "Value",
                          "description" : "The value of the field",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    }
                  }
                }, {
                  "type" : "object",
                  "required" : [ "extract-field" ],
                  "properties" : {
                    "extract-field" : {
                      "title" : "Extract Field Action",
                      "description" : "Extract a field from the body",
                      "required" : [ "field" ],
                      "properties" : {
                        "field" : {
                          "title" : "Field",
                          "description" : "The name of the field to be added",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    }
                  }
                } ]
              }
            }
          }
        },
        "id" : "postgresql_source_0.1",
        "kind" : "ConnectorType",
        "icon_href" : "TODO",
        "name" : "PostgreSQL Source",
        "description" : "PostgreSQL Source",
        "version" : "0.1",
        "labels" : [ "source" ],
        "channels" : [ "stable" ]
      },
      "channels" : {
        "stable" : {
          "shard_metadata" : {
            "connector_revision" : "1",
            "connector_type" : "source",
            "connector_image" : "quay.io/lburgazzoli/mci:0.1.1-postgresql-source-0.1",
            "operators" : [ {
              "type" : "camel-connector-operator",
              "version" : "[1.0.0,2.0.0)"
            } ],
            "kamelets" : {
              "connector" : "postgresql-source",
              "kafka" : "managed-kafka-sink",
              "insert-field" : "insert-field-action",
              "extract-field" : "extract-field-action"
            }
          }
        }
      }
    }
  sqlserver_sink_0.1.json: |-
    {
      "connector_type" : {
        "json_schema" : {
          "type" : "object",
          "properties" : {
            "connector" : {
              "type" : "object",
              "title" : "Microsoft SQL Server Sink",
              "required" : [ "serverName", "username", "password", "query", "databaseName" ],
              "properties" : {
                "serverName" : {
                  "title" : "Server Name",
                  "description" : "Server Name for the data source",
                  "type" : "string",
                  "example" : "localhost"
                },
                "port" : {
                  "title" : "Port",
                  "description" : "Server Port for the data source",
                  "type" : "string",
                  "default" : 1433
                },
                "username" : {
                  "title" : "Username",
                  "description" : "The username to use for accessing a secured SQL Server Database",
                  "type" : "string"
                },
                "password" : {
                  "title" : "Password",
                  "oneOf" : [ {
                    "title" : "Password",
                    "description" : "The password to use for accessing a secured SQL Server Database",
                    "type" : "string",
                    "format" : "password"
                  }, {
                    "description" : "An opaque reference to the password",
                    "type" : "object",
                    "properties" : { }
                  } ]
                },
                "query" : {
                  "title" : "Query",
                  "description" : "The Query to execute against the SQL Server Database",
                  "type" : "string",
                  "example" : "INSERT INTO accounts (username,city) VALUES (:#username,:#city)"
                },
                "databaseName" : {
                  "title" : "Database Name",
                  "description" : "The Database Name we are pointing",
                  "type" : "string"
                }
              }
            },
            "kafka" : {
              "type" : "object",
              "title" : "Managed Kafka Source",
              "required" : [ "topic" ],
              "properties" : {
                "topic" : {
                  "title" : "Topic names",
                  "description" : "Comma separated list of Kafka topic names",
                  "type" : "string"
                }
              }
            },
            "steps" : {
              "type" : "array",
              "items" : {
                "oneOf" : [ {
                  "type" : "object",
                  "required" : [ "insert-field" ],
                  "properties" : {
                    "insert-field" : {
                      "title" : "Insert Field Action",
                      "description" : "Adds a custom field with a constant value to the message in transit",
                      "required" : [ "field", "value" ],
                      "properties" : {
                        "field" : {
                          "title" : "Field",
                          "description" : "The name of the field to be added",
                          "type" : "string"
                        },
                        "value" : {
                          "title" : "Value",
                          "description" : "The value of the field",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    }
                  }
                }, {
                  "type" : "object",
                  "required" : [ "extract-field" ],
                  "properties" : {
                    "extract-field" : {
                      "title" : "Extract Field Action",
                      "description" : "Extract a field from the body",
                      "required" : [ "field" ],
                      "properties" : {
                        "field" : {
                          "title" : "Field",
                          "description" : "The name of the field to be added",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    }
                  }
                } ]
              }
            }
          }
        },
        "id" : "sqlserver_sink_0.1",
        "kind" : "ConnectorType",
        "icon_href" : "TODO",
        "name" : "SQL Server Sink",
        "description" : "SQL Server Sink",
        "version" : "0.1",
        "labels" : [ "sink" ],
        "channels" : [ "stable" ]
      },
      "channels" : {
        "stable" : {
          "shard_metadata" : {
            "connector_revision" : "1",
            "connector_type" : "sink",
            "connector_image" : "quay.io/lburgazzoli/mci:0.1.1-sqlserver-sink-0.1",
            "operators" : [ {
              "type" : "camel-connector-operator",
              "version" : "[1.0.0,2.0.0)"
            } ],
            "kamelets" : {
              "connector" : "sqlserver-sink",
              "kafka" : "managed-kafka-source",
              "insert-field" : "insert-field-action",
              "extract-field" : "extract-field-action"
            }
          }
        }
      }
    }
  sqlserver_source_0.1.json: |-
    {
      "connector_type" : {
        "json_schema" : {
          "type" : "object",
          "properties" : {
            "connector" : {
              "type" : "object",
              "title" : "Microsoft SQL Server Source",
              "required" : [ "serverName", "username", "password", "query", "databaseName" ],
              "properties" : {
                "serverName" : {
                  "title" : "Server Name",
                  "description" : "Server Name for the data source",
                  "type" : "string",
                  "example" : "localhost"
                },
                "port" : {
                  "title" : "Port",
                  "description" : "Server Port for the data source",
                  "type" : "string",
                  "default" : 1433
                },
                "username" : {
                  "title" : "Username",
                  "description" : "The username to use for accessing a secured SQL Server Database",
                  "type" : "string"
                },
                "password" : {
                  "title" : "Password",
                  "oneOf" : [ {
                    "title" : "Password",
                    "description" : "The password to use for accessing a secured SQL Server Database",
                    "type" : "string",
                    "format" : "password"
                  }, {
                    "description" : "An opaque reference to the password",
                    "type" : "object",
                    "properties" : { }
                  } ]
                },
                "query" : {
                  "title" : "Query",
                  "description" : "The Query to execute against the SQL Server Database",
                  "type" : "string",
                  "example" : "INSERT INTO accounts (username,city) VALUES (:#username,:#city)"
                },
                "databaseName" : {
                  "title" : "Database Name",
                  "description" : "The Database Name we are pointing",
                  "type" : "string"
                },
                "consumedQuery" : {
                  "title" : "Consumed Query",
                  "description" : "A query to run on a tuple consumed",
                  "type" : "string",
                  "example" : "DELETE FROM accounts where user_id = :#user_id"
                }
              }
            },
            "kafka" : {
              "type" : "object",
              "title" : "Managed Kafka Sink",
              "required" : [ "topic" ],
              "properties" : {
                "topic" : {
                  "title" : "Topic names",
                  "description" : "Comma separated list of Kafka topic names",
                  "type" : "string"
                }
              }
            },
            "steps" : {
              "type" : "array",
              "items" : {
                "oneOf" : [ {
                  "type" : "object",
                  "required" : [ "insert-field" ],
                  "properties" : {
                    "insert-field" : {
                      "title" : "Insert Field Action",
                      "description" : "Adds a custom field with a constant value to the message in transit",
                      "required" : [ "field", "value" ],
                      "properties" : {
                        "field" : {
                          "title" : "Field",
                          "description" : "The name of the field to be added",
                          "type" : "string"
                        },
                        "value" : {
                          "title" : "Value",
                          "description" : "The value of the field",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    }
                  }
                }, {
                  "type" : "object",
                  "required" : [ "extract-field" ],
                  "properties" : {
                    "extract-field" : {
                      "title" : "Extract Field Action",
                      "description" : "Extract a field from the body",
                      "required" : [ "field" ],
                      "properties" : {
                        "field" : {
                          "title" : "Field",
                          "description" : "The name of the field to be added",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    }
                  }
                } ]
              }
            }
          }
        },
        "id" : "sqlserver_source_0.1",
        "kind" : "ConnectorType",
        "icon_href" : "TODO",
        "name" : "SQL Server Source",
        "description" : "SQL Server Source",
        "version" : "0.1",
        "labels" : [ "source" ],
        "channels" : [ "stable" ]
      },
      "channels" : {
        "stable" : {
          "shard_metadata" : {
            "connector_revision" : "1",
            "connector_type" : "source",
            "connector_image" : "quay.io/lburgazzoli/mci:0.1.1-sqlserver-source-0.1",
            "operators" : [ {
              "type" : "camel-connector-operator",
              "version" : "[1.0.0,2.0.0)"
            } ],
            "kamelets" : {
              "connector" : "sqlserver-source",
              "kafka" : "managed-kafka-sink",
              "insert-field" : "insert-field-action",
              "extract-field" : "extract-field-action"
            }
          }
        }
      }
    }
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: connector-catalog-camel-sql
